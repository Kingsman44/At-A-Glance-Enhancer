#!/system/bin/sh

[ $API -le 32 ] && abort "At a Glance module is only supported on Android 13 or Above"

chmod 0755 $MODPATH/addon/*

# Variables
gms=/data/data/com.google.android.gms/databases/phenotype.db
sqlite=$MODPATH/addon/sqlite3
mkdir -p $MODPATH/system/product/priv-app
app=/data/app/*

db_edit() {
    type=$2
    val=$3
    name=$1
    shift
    shift
    shift
    # echo "- $name patching started" >> $logfile
    for i in $@; do
        # echo "Patching $i to $val" >> $logfile
        $sqlite $gms "DELETE FROM FlagOverrides WHERE packageName='$name' AND name='$i'"
        sleep .001
        $sqlite $gms "INSERT INTO FlagOverrides(packageName, user, name, flagType, $type, committed) VALUES('$name', '', '$i', 0, $val, 0)"
        sleep .001
        $sqlite $gms "UPDATE Flags SET $type='$val' WHERE packageName='$name' AND name='$i'"
        sleep .05
        # for j in $gacc; do
        # $sqlite $gms "INSERT INTO FlagOverrides(packageName, user, name, flagType, $type, committed) VALUES('$name', '$j', '$i', 0, $val, 0)"
        # done
    done
    # echo "- $name patching done" >> $logfile
}

set_perm_app() {
    out=$($MODPATH/addon/aapt d permissions $1)
    path="$(echo "$1" | sed 's/\/priv-app.*//')"
    name=$(echo $out | grep package: | cut -d' ' -f2)
    perm="$(echo $out | grep uses-permission:)"
    if [ ! -z "$perm" ]; then
        echo " - Generatings permission for package: $name" >>$logfile
        mkdir -p $path/etc/permissions
        echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>" >>$path/etc/permissions/privapp-permissions-$name.xml
        echo "<!-- " >>$path/etc/permissions/privapp-permissions-$name.xml
        echo " Generated by Pixelify Module " >>$path/etc/permissions/privapp-permissions-$name.xml
        echo "-->" >>$path/etc/permissions/privapp-permissions-$name.xml
        echo "<permissions>" >>$path/etc/permissions/privapp-permissions-$name.xml
        echo "    <privapp-permissions package=\"${name}\">" >>$path/etc/permissions/privapp-permissions-$name.xml
        for i in $perm; do
            s=$(echo $i | grep name= | cut -d= -f2 | sed "s/'/\"/g")
            if [ ! -z $s ]; then
                pm grant $name $s &>/dev/null
                echo "        <permission name=$s/>" >>$path/etc/permissions/privapp-permissions-$name.xml
            fi
        done
        if [ "$name" == "com.google.android.apps.nexuslauncher" ]; then
            echo "        <permission name=\"android.permission.PACKAGE_USAGE_STATS\"/>" >>$path/etc/permissions/privapp-permissions-$name.xml
        elif [ "$name" == "com.google.android.as.oss" ]; then
            echo "        <permission name=\"android.permission.ACCESS_WIFI_STATE\"/>" >>$path/etc/permissions/privapp-permissions-$name.xml
            echo "        <permission name=\"android.permission.CHANGE_WIFI_STATE\"/>" >>$path/etc/permissions/privapp-permissions-$name.xml
        fi
        echo "    </privapp-permissions>" >>$path/etc/permissions/privapp-permissions-$name.xml
        echo "</permissions>" >>$path/etc/permissions/privapp-permissions-$name.xml
        chmod 0644 $path/etc/permissions/privapp-permissions-$name.xml
    fi
}

if [ ! -z $(find /system -name DevicePerson* | grep -v "\.") ] && [ ! -z $(find /system -name DevicePerson* | grep -v "\.") ]; then
    DP1=$(find /system -name DevicePerson* | grep -v "\.")
    DP2=$(find /system -name Matchmaker* | grep -v "\.")
    DP="$DP1 $DP2"
elif [ -z $(find /system -name DevicePerson* | grep -v "\.") ]; then
    DP=$(find /system -name Matchmaker* | grep -v "\.")
else
    DP=$(find /system -name DevicePerson* | grep -v "\.")
fi

ui_print "- Enabling At a Glance features"
$sqlite $gms "DELETE FROM FlagOverrides WHERE packageName='com.google.android.platform.device_personalization_services'"
db_edit com.google.android.platform.device_personalization_services boolVal 1 "AmbientContext__enable" "AmbientContext__enable_quick_tap" "Echo_smartspace__smartspace_enable_daily_forecast" "Captions__enable_enhanced_voice_dictation_biasing" "Echo_smartspace__smartspace_enable_timely_reminder" "Captions__allow_use_public_speech_recognition" "Echo_search__enable_dota" "Translate__enable_language_profile_quick_update" "SmartDictation__enable_selection_filtering" "SmartRecCompose__enable_compose_tc" "Translate__beta_audio_to_text_languages_in_live_caption" "Translate__enable_chronicle_migration" "Translate__use_translate_kit_streaming_api" "SpeechRecognitionService__resumable_diarization_enabled" "Echo__smartspace_enable_grocery" "Echo_smartspace__enable_is_debug" "Echo_smartspace__enable_hotel_smartspace_aiai" "Echo_smartspace__enable_flight_landing_smartspace_aiai" "Echo__smartspace_enable_dwb_bedtime_predictor" "Translate__translation_service_enabled" "Echo__avatar_enable_feature" "SmartDictation__enable_biasing_for_commands" "SmartDictation__enable_alternatives_from_past_corrections" "SmartRecPixelSearch__enable_gboard_suggestion" "SmartRecPixelSearch__enable_spelling_correction" "Captions__enable_language_detection" "Echo__search_enable_mdp_play_results" "Echo__search_enable_superpacks_play_results" "Echo__search_enable_assistant_quick_phrases_settings" "Echo__smartspace_enable_battery_notification_parser" "Echo__smartspace_enable_ridesharing_eta" "Echo__smartspace_enable_food_delivery_eta" "Echo__smartspace_enable_eta_doordash" "SmartDictation__enable_alternatives_from_past_corrections" "SmartDictation__enable_alternatives_from_speech_hypotheses" "SmartDictation__enable_biasing_for_commands" "SmartDictation__enable_biasing_for_contacts" "SmartDictation__enable_biasing_for_contacts_learned_from_past_corrections" "SmartDictation__enable_biasing_for_interests_model" "SmartDictation__enable_biasing_for_past_correction" "SmartDictation__enable_biasing_for_screen_context" "SmartDictation__enable_personalized_biasing_on_locked_device" "SmartDictation__enable_selection_filtering" "Echo__search_enable_apps" "Captions__text_transform_augmented_input" "Captions__enable_augmented_modality" "Captions__enable_augmented_modality_input" "Echo__enable_headphones_suggestions_from_agsa" "NowPlaying__youtube_export_enabled" "Overview__enable_lens_r_overview_long_press" "Overview__enable_lens_r_overview_select_mode" "Overview__enable_lens_r_overview_translate_action" "Echo__smartspace_enable_doorbell" "Echo__smartspace_enable_earthquake_alert_predictor" "Echo__smartspace_enable_echo_settings" "Echo__smartspace_enable_light_predictor" "Echo__smartspace_enable_paired_device_predictor" "Echo__smartspace_enable_safety_check_predictor" "Echo__smartspace_enable_echo_unified_settings" "Echo__smartspace_enable_dark_launch_outlook_events" "Echo__smartspace_enable_step_predictor" "Echo__smartspace_enable_nap" "Echo__smartspace_enable_paired_device_connections" "Echo__smartspace_dedupe_fast_pair_notification" "Echo__smartspace_enable_nudge" "Echo__smartspace_enable_package_delivery" "Echo__smartspace_enable_outlook_events" "Echo__smartspace_gaia_twiddler" "Echo__smartspace_enable_eta_lyft" "Echo__smartspace_enable_sensitive_notification_twiddler" "Screenshot__enable_covid_card_action" "Screenshot__enable_lens_screenshots_search_action" "Screenshot__enable_lens_screenshots_similar_styles_action" "Screenshot__enable_lens_screenshots_translate_action" "Screenshot__enable_quick_share_smart_action" "Screenshot__enable_screenshot_notification_smart_actions" "Screenshot__enable_add_to_wallet_title" "Screenshot__can_use_gms_core_to_save_boarding_pass" "Screenshot__can_use_gpay_to_save_boarding_pass" "Echo__smartspace_enable_cross_device_timer" "Echo__smartspace_show_cross_device_timer_label" "Settings__enable_internal_settings" "People__enable_call_log_signals" "People__enable_contacts" "People__enable_dictation_client" "People__enable_hybrid_hotseat_client" "People__enable_notification_common" "People__enable_notification_signals" "People__enable_package_tracker" "People__enable_people_pecan" "People__enable_people_search_content" "People__enable_priority_suggestion_client" "People__enable_profile_signals" "People__enable_sharesheet_client" "People__enable_sms_signals" "GellerDataShare__enable_data_capture" "GellerDataShare__enable_data_fetch" "GellerDataShare__enable_settings_opt_in_switch" "SmartRecOverviewChips__enable_smartrec_for_overview_chips" "SmartRecOverviewChips__enable_settings_card_generator" "SmartRecOverviewChips__enable_reflection_generator" "SmartRecOverviewChips__enable_action_boost_generator" "SmartRecQuickSearchBox__enable_action_boost_generator" "SmartRecOverviewChips__enable_matchmaker_generator" "Echo__enable_widget_recommendations" "Echo__search_play_enable_spell_correction" "Echo__enable_people_module"

ui_print "- Installing Android System Intelligence"
ui_print ""

tar -xf $MODPATH/dp-33.tar.xz -C $MODPATH/system/product/priv-app

REPLACE="$DP"

pm install --user 0 $MODPATH/system/product/priv-app/asi_up.apk &>/dev/null
[ $API -ge 31 ] && pm install --user 0 $MODPATH/system/product/priv-app/DeviceIntelligenceNetworkPrebuilt/*.apk &>/dev/null
rm -rf $MODPATH/system/product/priv-app/asi_up.apk

touch "$MODPATH/system/product/priv-app/DeviceIntelligenceNetworkPrebuilt/.replace"

# Making Google APP as a system app.
if [ -z $(pm list packages com.google.android.googlequicksearchbox | grep -v nga) ]; then
    ui_print "- Google App is not installed"
    ui_print "- We recommend to install Google app then install this module"
elif [ -z $(pm list packages -s com.google.android.googlequicksearchbox | grep -v nga) ]; then
    ui_print "- Google is not installed as a system app !!"
    ui_print "- Making Google a system app"
    ui_print ""
    if [ -f /$app/com.google.android.googlequicksearchbox*/base.apk ]; then
        cp -r ~/$app/com.google.android.googlequicksearchbox*/. $MODPATH/system/product/priv-app/Velvet
        mv $MODPATH/system/product/priv-app/Velvet/base.apk $MODPATH/system/product/priv-app/Velvet/Velvet.apk
    else
        cp -r ~/data/adb/modules/Pixelify/system$product/priv-app/Velvet/. $MODPATH/system$product/priv-app/Velvet
    fi
    rm -rf $MODPATH/system/product/priv-app/Velvet/oat
elif [ -f /data/adb/modules/glance_enhancer/system/product/priv-app/Velvet/Velvet.apk ]; then
    ui_print "- Making Google app a system app"
    if [ -f /$app/com.google.android.googlequicksearchbox*/base.apk ]; then
        cp -r ~/$app/com.google.android.googlequicksearchbox*/. $MODPATH/system/product/priv-app/Velvet
        mv $MODPATH/system/product/priv-app/Velvet/base.apk $MODPATH/system/product/priv-app/Velvet/Velvet.apk
    else
        cp -r ~/data/adb/modules/Pixelify/system$product/priv-app/Velvet/. $MODPATH/system$product/priv-app/Velvet
    fi
    rm -rf $MODPATH/system/product/priv-app/Velvet/oat
fi

am force-stop com.google.android.googlequicksearchbox

ui_print "- Installation Completed"
ui_print "- Reboot to apply changes"
